$date
	Wed Feb  6 10:31:55 2013
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testThis $end
$var wire 4 ! out [3:0] $end
$var reg 3 " in [2:0] $end
$scope module dec4 $end
$var wire 1 # enable $end
$var wire 2 $ in [1:0] $end
$var wire 4 % out [3:0] $end
$var wire 2 & w_enable [1:0] $end
$scope module d0 $end
$var wire 1 # enable $end
$var wire 1 ' in $end
$var wire 2 ( out [1:0] $end
$upscope $end
$scope module d1 $end
$var wire 1 ) enable $end
$var wire 1 * in $end
$var wire 2 + out [1:0] $end
$upscope $end
$scope module d2 $end
$var wire 1 , enable $end
$var wire 1 - in $end
$var wire 2 . out [1:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 .
0-
0,
b0 +
0*
0)
b0 (
0'
b0 &
b0 %
b0 $
0#
b0 "
b0 !
$end
#1
1*
1-
b1 $
b1 "
#2
1'
0*
0-
b10 $
b10 "
#3
1*
1-
b11 $
b11 "
#4
b1 +
1)
b1 !
b1 %
b0 .
0,
0'
0*
0-
b1 &
b1 (
b0 $
1#
b100 "
#5
b10 !
b10 %
b10 +
1*
1-
b1 $
b101 "
#6
0)
b1 .
1,
b10 &
b10 (
b100 !
b100 %
b0 +
1'
0*
0-
b10 $
b110 "
#7
b1000 !
b1000 %
b10 .
1*
1-
b11 $
b111 "
#8
b0 !
b0 %
b0 .
0,
0'
0*
0-
b0 &
b0 (
b0 $
0#
b0 "
