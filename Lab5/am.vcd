$date
	Sun Feb 17 16:25:56 2013
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 1 ! except $end
$var reg 1 " clk $end
$var reg 1 # done $end
$var integer 32 $ i [31:0] $end
$var reg 1 % reset $end
$scope module am $end
$var wire 32 & A [31:0] $end
$var wire 32 ' B [31:0] $end
$var wire 32 ( PC [31:0] $end
$var wire 5 ) Rdest [4:0] $end
$var wire 3 * alu_op [2:0] $end
$var wire 1 + clk $end
$var wire 1 ! except $end
$var wire 32 , imm32 [31:0] $end
$var wire 32 - inst [31:0] $end
$var wire 1 . itype $end
$var wire 1 / negative $end
$var wire 32 0 nextPC [31:0] $end
$var wire 32 1 out [31:0] $end
$var wire 1 2 overflow $end
$var wire 1 3 reset $end
$var wire 32 4 rtData [31:0] $end
$var wire 1 5 wr_en $end
$var wire 1 6 zero $end
$scope module PC_reg $end
$var wire 1 + clk $end
$var wire 32 7 d [31:0] $end
$var wire 1 8 enable $end
$var wire 1 3 reset $end
$var reg 32 9 q [31:0] $end
$upscope $end
$scope module alu0 $end
$var wire 3 : control [2:0] $end
$var wire 32 ; inA [31:0] $end
$var wire 32 < inB [31:0] $end
$var wire 1 / negative $end
$var wire 32 = out [31:0] $end
$var wire 1 2 overflow $end
$var wire 1 6 zero $end
$upscope $end
$scope module mip0 $end
$var wire 1 > add $end
$var wire 1 ? addi $end
$var wire 3 @ alu_op [2:0] $end
$var wire 1 A andd $end
$var wire 1 B andi $end
$var wire 1 ! except $end
$var wire 6 C funct [5:0] $end
$var wire 1 . itype $end
$var wire 1 D norr $end
$var wire 6 E opcode [5:0] $end
$var wire 1 F ori $end
$var wire 1 G orr $end
$var wire 1 H sub $end
$var wire 1 5 writeenable $end
$var wire 1 I xori $end
$var wire 1 J xorr $end
$upscope $end
$scope module im $end
$var wire 30 K addr [29:0] $end
$var wire 32 L data [31:0] $end
$var reg 32 M i [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 + clock $end
$var wire 32 N rdData [31:0] $end
$var wire 5 O rdNum [4:0] $end
$var wire 1 5 rdWriteEnable $end
$var wire 1 3 reset $end
$var wire 32 P rsData [31:0] $end
$var wire 5 Q rsNum [4:0] $end
$var wire 32 R rtData [31:0] $end
$var wire 5 S rtNum [4:0] $end
$var integer 32 T i [31:0] $end
$upscope $end
$scope module itype0 $end
$var wire 5 U A [4:0] $end
$var wire 5 V B [4:0] $end
$var wire 5 W out [4:0] $end
$var wire 1 . sel $end
$var wire 5 X temp1 [4:0] $end
$var wire 5 Y temp2 [4:0] $end
$upscope $end
$scope module itype1 $end
$var wire 32 Z A [31:0] $end
$var wire 32 [ B [31:0] $end
$var wire 32 \ out [31:0] $end
$var wire 1 . sel $end
$var wire 32 ] temp1 [31:0] $end
$var wire 32 ^ temp2 [31:0] $end
$upscope $end
$scope module main_alu $end
$var wire 3 _ control [2:0] $end
$var wire 32 ` inA [31:0] $end
$var wire 32 a inB [31:0] $end
$var wire 1 / negative $end
$var wire 32 b out [31:0] $end
$var wire 1 2 overflow $end
$var wire 1 6 zero $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b1100100 b
b1100100 a
b0 `
b10 _
b1100100 ^
b0 ]
b1100100 \
b1100100 [
b0 Z
b110 Y
b0 X
b110 W
b110 V
b0 U
b100000 T
b110 S
b0 R
b0 Q
b0 P
b110 O
b1100100 N
b100000000 M
b100000000001100000000001100100 L
b0 K
0J
0I
0H
0G
0F
b1000 E
0D
b100100 C
0B
0A
b10 @
1?
0>
b100 =
b100 <
b0 ;
b10 :
b0 9
18
b100 7
06
15
b0 4
13
02
b1100100 1
b100 0
0/
1.
b100000000001100000000001100100 -
b1100100 ,
0+
b10 *
b110 )
b0 (
b1100100 '
b0 &
1%
bx $
0#
0"
0!
$end
#3
0%
03
#5
b11111111 1
b11111111 N
b11111111 b
b10011011 '
b10011011 \
b10011011 a
b111 )
b111 O
b111 W
b10011011 ^
b111 Y
b1000 0
b1000 7
b1000 =
b10011011 ,
b10011011 [
b111 V
b111 S
b110 Q
b1100100 &
b1100100 P
b1100100 `
b11011 C
b100000110001110000000010011011 -
b100000110001110000000010011011 L
b1 K
b100 9
b100 (
b100 ;
b0 4
b0 R
b0 Z
1"
1+
#10
0"
0+
#15
0/
06
b11001000 1
b11001000 N
b11001000 b
0!
b1000 X
b1100100 ]
0.
b1100100 '
b1100100 \
b1100100 a
b1000 )
b1000 O
b1000 W
b0 ^
b0 Y
1>
b10 *
b10 @
b10 _
b1100 0
b1100 7
b1100 =
b100000000100000 ,
b100000000100000 [
b110 V
b1000 U
b110 S
b100000 C
b0 E
0?
b110001100100000000100000 -
b110001100100000000100000 L
b10 K
b1100100 4
b1100100 R
b1100100 Z
b1000 9
b1000 (
b1000 ;
1"
1+
#20
0"
0+
#25
b11 *
b11 @
b11 _
b110111 1
b110111 N
b110111 b
b1001 )
b1001 O
b1001 W
b11001000 '
b11001000 \
b11001000 a
b1001 X
b11001000 ]
0>
1H
b10000 0
b10000 7
b10000 =
b100100000100010 ,
b100100000100010 [
b1000 V
b1001 U
b1000 S
b11001000 4
b11001000 R
b11001000 Z
b111 Q
b11111111 &
b11111111 P
b11111111 `
b100010 C
b111010000100100000100010 -
b111010000100100000100010 L
b11 K
b1100 9
b1100 (
b1100 ;
1"
1+
#30
0"
0+
#35
x/
06
b1010 )
b1010 O
b1010 W
b11111111 '
b11111111 \
b11111111 a
b11111111111111111111111111001001 1
b11111111111111111111111111001001 N
b11111111111111111111111111001001 b
b1010 X
b11111111 ]
b10100 0
b10100 7
b10100 =
b101000000100010 ,
b101000000100010 [
b111 V
b1010 U
b111 S
b11111111 4
b11111111 R
b11111111 Z
b1000 Q
b11001000 &
b11001000 P
b11001000 `
b1000001110101000000100010 -
b1000001110101000000100010 L
b100 K
b10000 9
b10000 (
b10000 ;
1"
1+
#40
0"
0+
#45
06
0/
b10 *
b10 @
b10 _
b100101100 1
b100101100 N
b100101100 b
b1011 )
b1011 O
b1011 W
b1100100 '
b1100100 \
b1100100 a
b1011 X
b1100100 ]
1>
0H
b11000 0
b11000 7
b11000 =
b101100000100000 ,
b101100000100000 [
b110 V
b1011 U
b110 S
b1100100 4
b1100100 R
b1100100 Z
b100000 C
b1000001100101100000100000 -
b1000001100101100000100000 L
b101 K
b10100 9
b10100 (
b10100 ;
1"
1+
#50
0"
0+
#55
06
0/
b101100 1
b101100 N
b101100 b
b100 *
b100 @
b100 _
b1100 )
b1100 O
b1100 W
b11111111 '
b11111111 \
b11111111 a
b1100 X
b11111111 ]
0>
1A
b11100 0
b11100 7
b11100 =
b110000000100100 ,
b110000000100100 [
b111 V
b1100 U
b111 S
b11111111 4
b11111111 R
b11111111 Z
b1011 Q
b100101100 &
b100101100 P
b100101100 `
b100100 C
b1011001110110000000100100 -
b1011001110110000000100100 L
b110 K
b11000 9
b11000 (
b11000 ;
1"
1+
#60
0"
0+
#65
x/
b11111111111111111111111111111111 1
b11111111111111111111111111111111 N
b11111111111111111111111111111111 b
b101 *
b101 @
b101 _
b1101 )
b1101 O
b1101 W
b1101 X
0A
1G
b100000 0
b100000 7
b100000 =
b110100000100101 ,
b110100000100101 [
b1101 U
b1010 Q
b11111111111111111111111111001001 &
b11111111111111111111111111001001 P
b11111111111111111111111111001001 `
b100101 C
b1010001110110100000100101 -
b1010001110110100000100101 L
b111 K
b11100 9
b11100 (
b11100 ;
1"
1+
#70
0"
0+
#75
0/
b101010110101010 1
b101010110101010 N
b101010110101010 b
b111 *
b111 @
b111 _
b1110 )
b1110 O
b1110 W
b101010101010101 '
b101010101010101 \
b101010101010101 a
b101010101010101 ^
b1110 Y
b0 X
b0 ]
0G
1.
b100100 0
b100100 7
b100100 =
b101010101010101 ,
b101010101010101 [
b1110 V
b1010 U
b1110 S
b0 4
b0 R
b0 Z
b111 Q
b11111111 &
b11111111 P
b11111111 `
b10101 C
b1110 E
1I
b111000111011100101010101010101 -
b111000111011100101010101010101 L
b1000 K
b100000 9
b100000 (
b100000 ;
1"
1+
#80
0"
0+
#85
0/
b100000000 1
b100000000 N
b100000000 b
b1111 )
b1111 O
b1111 W
b11111111111111111111111111111111 '
b11111111111111111111111111111111 \
b11111111111111111111111111111111 a
b0 ^
b0 Y
b1111 X
b11111111111111111111111111111111 ]
1H
0!
0.
b11 *
b11 @
b11 _
b101000 0
b101000 7
b101000 =
b111100000100010 ,
b111100000100010 [
b1101 V
b1111 U
b1101 S
b100010 C
b0 E
0I
b111011010111100000100010 -
b111011010111100000100010 L
b1001 K
b100100 9
b100100 (
b100100 ;
b11111111111111111111111111111111 4
b11111111111111111111111111111111 R
b11111111111111111111111111111111 Z
1"
1+
#90
0"
0+
#95
06
b10 *
b10 @
b10 _
b10000 )
b10000 O
b10000 W
b1100011 1
b1100011 N
b1100011 b
b10000 X
1>
0H
b101100 0
b101100 7
b101100 =
b11111111111111111000000000100000 ,
b11111111111111111000000000100000 [
b10000 U
b110 Q
b1100100 &
b1100100 P
b1100100 `
b100000 C
b110011011000000000100000 -
b110011011000000000100000 L
b1010 K
b101000 9
b101000 (
b101000 ;
1"
1+
#100
0"
0+
#105
x/
06
b11111111111111111111111000000000 1
b11111111111111111111111000000000 N
b11111111111111111111111000000000 b
b110 *
b110 @
b110 _
b10001 )
b10001 O
b10001 W
b11111111 '
b11111111 \
b11111111 a
b10001 X
b11111111 ]
0>
1D
b110000 0
b110000 7
b110000 =
b11111111111111111000100000100111 ,
b11111111111111111000100000100111 [
b111 V
b10001 U
b111 S
b11111111 4
b11111111 R
b11111111 Z
b1111 Q
b100000000 &
b100000000 P
b100000000 `
b100111 C
b1111001111000100000100111 -
b1111001111000100000100111 L
b1011 K
b101100 9
b101100 (
b101100 ;
1"
1+
#110
0"
0+
#115
0!
b11111111111111111111111100000000 1
b11111111111111111111111100000000 N
b11111111111111111111111100000000 b
b10 *
b10 @
b10 _
b10010 )
b10010 O
b10010 W
b100000000 '
b100000000 \
b100000000 a
b10010 X
b100000000 ]
1>
0D
b110100 0
b110100 7
b110100 =
b11111111111111111001000000100000 ,
b11111111111111111001000000100000 [
b1111 V
b10010 U
b1111 S
b100000000 4
b100000000 R
b100000000 Z
b10001 Q
b11111111111111111111111000000000 &
b11111111111111111111111000000000 P
b11111111111111111111111000000000 `
b100000 C
b10001011111001000000100000 -
b10001011111001000000100000 L
b1100 K
b110000 9
b110000 (
b110000 ;
1"
1+
#120
0"
0+
#125
1!
x/
b11111111111111111111111111111111 1
b11111111111111111111111111111111 N
b11111111111111111111111111111111 b
b110 *
b110 @
b110 _
b0 )
b0 O
b0 W
b0 '
b0 \
b0 a
b0 X
b0 ]
0>
b111000 0
b111000 7
b111000 =
b0 ,
b0 [
b0 V
b0 U
b0 S
b0 4
b0 R
b0 Z
b0 Q
b0 &
b0 P
b0 `
b0 C
b0 -
b0 L
b1101 K
b110100 9
b110100 (
b110100 ;
1"
1+
#130
b100000 $
0"
0+
